from rsf.proj import *
from rsf.recipes import fdmod
from math import *
import ast
from numpy import *

kilo = 1000
xmax = 12.0*kilo
zmax = 2.0*kilo
wbz = 0.3*kilo
layers = ((wbz,wbz,wbz,wbz),
          (0.45*kilo,0.45*kilo,0.45*kilo,0.45*kilo),
          (0.55*kilo,0.55*kilo,0.55*kilo,0.55*kilo),
          (0.65*kilo,0.65*kilo,0.65*kilo,0.65*kilo),
          (0.85*kilo,0.85*kilo,0.85*kilo,0.85*kilo),
          (1.90*kilo,1.90*kilo,1.90*kilo,1.90*kilo))

velocities = (1.500*kilo,
              1.800*kilo,
              2.100*kilo,
              2.300*kilo,
              2.400*kilo,
              2.600*kilo,
              4.500*kilo)
densities = (1.000*kilo,
              2.000*kilo,
              2.200*kilo,
              2.200*kilo,
              2.300*kilo,
              2.100*kilo,
              2.000*kilo)
velocities_wb = (1.500*kilo,
              1.800*kilo,
              1.800*kilo,
              1.800*kilo,
              1.800*kilo,
              1.800*kilo,
              1.800*kilo)
densities_wb = (1.000*kilo,
              2.000*kilo,
              2.000*kilo,
              2.000*kilo,
              2.000*kilo,
              2.000*kilo,
              2.000*kilo)

def arr2str(array,sep=' '):
    return string.join(map(str,array),sep)

vstr = arr2str(velocities,',')
dstr = arr2str(densities,',')
vstr_wb = arr2str(velocities_wb,',')
dstr_wb = arr2str(densities_wb,',')

n1 = len(layers[0])
n2 = len(layers)

Flow('layers.asc',None,
     '''
     echo %s
     n1=%d n2=%d o1=0 d1=%g
     data_format=ascii_float in=$TARGET     
     ''' % (string.join(map(arr2str,layers),' '),
            n1,n2,xmax/(n1-1)))
Flow('layers','layers.asc','dd form=native')

d = 0.0075*kilo # non-round for reproducibility
nx = int(1.5+xmax/d)
nz = int(1.5+zmax/d)
Flow('refs','layers',
     '$RSFROOT/bin/sfspline o1=0 d1=%g n1=%d' % (d,nx))
Flow('dips','refs','deriv scale=y')

Flow('vpmod','refs',
     '''
     $RSFROOT/bin/sfunif2 d1=%g n1=%d v00=%s 
     ''' % (d,nz,vstr))
Flow('vpmod_wb','refs',
     '''
     $RSFROOT/bin/sfunif2 d1=%g n1=%d v00=%s 
     ''' % (d,nz,vstr_wb))

Flow('rhomod','refs',
     '''
     $RSFROOT/bin/sfunif2 d1=%g n1=%d v00=%s 
     ''' % (d,nz,dstr))
Flow('rhomod_wb','refs',
     '''
     $RSFROOT/bin/sfunif2 d1=%g n1=%d v00=%s 
     ''' % (d,nz,dstr_wb))

# rho [g/cm^3] , vel [km/s], 
Flow('blkmod','vpmod rhomod',
     '''
     math rho=${SOURCES[1]} output='rho*((input)^2)'
     ''')
Flow('blkmod_wb','vpmod_wb rhomod_wb',
     '''
     math rho=${SOURCES[1]} output='rho*((input)^2)'
     ''')

# ------------------------------------------------------------
par = dict( 
    nx=eval('%g'%(nx)), ox=0.0 ,dx=eval('%g'%(d)), lx='x',ux='m',
    nz=eval('%g'%(nz)), oz=0.0, dz=eval('%g'%(d)), lz='z',uz='m',
    nt=20001,ot=0.0, dt=0.0001, lt='t',ut='s',
    pclip=99.0,
    ratio=1.0,
    jsnap=5000,
    kt=800,
    nb=50,
    drsmpt=50
    )

# ------------------------------------------------------------
# set plotting parameters
fdmod.param(par)
# ------------------------------------------------------------

#Plot  ('vpmod',fdmod.cgrey('mean=y',par))
#Result('mod',fdmod.cgrey('mean=y',par))

ns = 151
nr = 301
ds = 0.02*kilo
dr_grid = 3
rx0 = 3.0*kilo 
rz0 = wbz
sx0 = 4.5*kilo
sz0 = 0.000*kilo
sz = sz0
rz = rz0

fdmod.horizontal('rr_all',rz,par)


## ------------------------------------------------------------
# horizontal array @ z=1.5km
##fdmod.horizontal('tH',rz0,par)
par['jrH']=dr_grid   # jump (grid points)
par['orH']=rx0 # origin
par['nrH']=nr   # number
##
### window array
Flow('rr','rr_all',
  'window j2=%d min2=%g n2=%d'%
  (par['jrH'],  # jump
   par['orH'],  # origin
   par['nrH'])) # number
##    
##    # plot array
##Plot(  'rH',fdmod.rrplot('',par))
##    
##
## ------------------------------------------------------------
## make smooth velocity
#Flow('vsmo','modl',
#     'smooth rect1=25 rect2=25 repeat=3')
## ------------------------------------------------------------

# construct wavelet
fdmod.wavelet('wav_',30,par) 

# transpose wavelet
Flow(  'wav','wav_','put n2=1 n3=1 | transp plane=13 | pad end2=2')      


# plot wavelet
#Result('wav','window n2=4000 |'
#       + fdmod.waveplot('',par)) 


## ------------------------------------------------------------


#for si in range(ns):
for si in [75]:
####
  stag='%03d'%si
  sx = sx0 + si*ds
  fdmod.point('ss_',sx,sz,par)
  Flow('ss','ss_','put n2=1')

  Flow('Fdat'+stag+' Fwfl'+stag,'wav blkmod rhomod ss rr',
      '''
      awesgvxvzpp bulk=${SOURCES[1]} den=${SOURCES[2]} sou=${SOURCES[3]} 
      rec=${SOURCES[4]} wfl=${TARGETS[1]} free=y nb=50
      ''')
  Flow('Fdat_nfs'+stag+' Fwfl_nfs'+stag,'wav blkmod rhomod ss rr',
      '''
      awesgvxvzpp bulk=${SOURCES[1]} den=${SOURCES[2]} sou=${SOURCES[3]} 
      rec=${SOURCES[4]} wfl=${TARGETS[1]} free=n nb=50
      ''')

  Flow('Fdat_wb'+stag+' Fwfl_wb'+stag,'wav blkmod_wb rhomod_wb ss rr',
      '''
      awesgvxvzpp bulk=${SOURCES[1]} den=${SOURCES[2]} sou=${SOURCES[3]} 
      rec=${SOURCES[4]} wfl=${TARGETS[1]} free=y nb=50
      ''')

#### window data from the horizontal array
  Flow('datH'+stag,'Fdat'+stag,
       '''
       pad end3=%d |
       window squeeze=n n1=%d f3=%d j3=%d  |
       put o3=%g o1=%g d1=%g  | transp plane=13 | transp plane=23
       '''%(par['kt'],par['nrH'],par['kt'], par['drsmpt'],par['ot'],
            par['orH'], par['jrH']*par['dx']))
  Flow('datH_wb'+stag,'Fdat_wb'+stag,
       '''
       pad end3=%d |
       window squeeze=n n1=%d f3=%d j3=%d  |
       put o3=%g o1=%g d1=%g  | transp plane=13 | transp plane=23
       '''%(par['kt'],par['nrH'],par['kt'], par['drsmpt'],par['ot'],
            par['orH'], par['jrH']*par['dx']))
  Flow('datH_nfs'+stag,'Fdat_nfs'+stag,
       '''
       pad end3=%d |
       window squeeze=n n1=%d f3=%d j3=%d  |
       put o3=%g o1=%g d1=%g  | transp plane=13 | transp plane=23
       '''%(par['kt'],par['nrH'],par['kt'], par['drsmpt'],par['ot'],
            par['orH'], par['jrH']*par['dx']))

##  Result('datH'+stag,'window j2=4 | transp|'
##         + fdmod.dgrey('pclip=92'%par,par))

##ENDFOR { for si in range(ns):}

Flow('datPP'+stag,'datH'+stag,
    '''
    window n3=1 f3=0
    ''')
Flow('datPP_wb'+stag,'datH_wb'+stag,
    '''
    window n3=1 f3=0
    ''')
Flow('datPP_nfs'+stag,'datH_nfs'+stag,
    '''
    window n3=1 f3=0
    ''')

Flow('datVZ'+stag,'datH'+stag,
    '''
    window n3=1 f3=1
    ''')
Flow('datVZ_wb'+stag,'datH_wb'+stag,
    '''
    window n3=1 f3=1
    ''')
Flow('datVZ_nfs'+stag,'datH_nfs'+stag,
    '''
    window n3=1 f3=1
    ''')

##Flow('datSc'+stag,'datPP'+stag+' datVZ'+stag,
##     '''
##     math vz=${SOURCES[1]} output='1/(vz)' |
##     clip clip=99999.999 |
##     math pp=${SOURCES[0]} output='abs((input*pp))/10000000' | 
##     nan2value 
##     ''',stdin=0)
###  | clip clip=100000 | smooth rect1=5 rect2=5 
###sfwindow < ./datPP075.rsf n2=50 f2=110 n1=50 f1=15 | sfgrey clip=999999.00 | sfpen &
##Flow('datVZ_sclNeg'+stag,'datPP'+stag+' datVZ'+stag+' datSc'+stag,
##     '''
##     math pp=${SOURCES[0]} vz=${SOURCES[1]} weight=${SOURCES[2]} output='-10000000*vz*weight'
##     ''',stdin=0)
##Flow('datVZ_sclPos'+stag,'datPP'+stag+' datVZ'+stag+' datSc'+stag,
##     '''
##     math pp=${SOURCES[0]} vz=${SOURCES[1]} weight=${SOURCES[2]} output='10000000*vz*weight'
##     ''',stdin=0)

##### PASTE WINDOW
##for phsh_i in range(16):
##  phsh_itag = '%03d'%(22.5*phsh_i)
##  phsh = phsh_i*math.pi/8.0
##  phsh_re = math.cos(phsh-math.pi*0.5)
##  phsh_im = math.sin(phsh-math.pi*0.5)
##  Flow('datVZ_p%s_wdw'%(phsh_itag)+stag,'datVZ_wdw'+stag,
##       '''
##       fft1 |
##       math output='(%g+I*%g)*(real(input)+imag(input))' | 
##       fft1 inv=y 
##       '''%(phsh_re,phsh_im))
##ENDLOOP{for phsh_i in range(8)}:

#     math output='1.57*imag(input)+1.57*real(input) ' | 
#     math output='0.5*I*real(input)+0.5*I*imag(input)+1.5*imag(input)+1.5*real(input) ' | Reduce a lot

#     math output='0.25*I*real(input)+0.25*I*imag(input)+1.25*imag(input)+1.25*real(input) ' | 

##Flow('datVZ_m90_wdw'+stag,'datVZ_wdw'+stag,
##     '''
##     fft1 | 
##     math output='imag(input)+I*real(input)' | 
##     fft1 inv=y 
##     ''')
##
##Flow('datVZ_sclNegToPef'+stag,'datVZ_sclNeg'+stag,
##     '''
##     window n2=%d f2=%d n1=%d f1=%d
##     '''%(wdw_xn, wdw_x0, wdw_tn, wdw_t0))
##Flow('datVZ_despike_sclNegToPef'+stag,'datVZ_sclNegToPef'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=5 wide2=5
##      ''')
##Flow('datVZ_bandpass'+stag,'datVZ_sclNegToPef'+stag,
##      '''
##      $RSFROOT/bin/sfbandpass fhi=60 flo=1 | costaper nw1=5 nw2=5 
##      ''')

##nshifts = 7
##shifts = ['datVZ_sclNegToPef'+stag]
##shifts_despike = ['datVZ_despike_sclNegToPef'+stag]
##shifts_bandpass = ['datVZ_bandpass'+stag]
##
##for s in range(1,nshifts):
##    shift = 'shift+%02d' % s
##    shift_despike = 'shift_desspike+%02d' % s
##    shift_bandpass = 'shift_bandpass+%02d' % s
##
##    Flow(shift,'datVZ_sclNegToPef'+stag,
##         'window n1=%d | pad beg1=%d | put o1=0.075' % (nt-nshifts,nshifts))
##    shifts.append(shift)
##    Flow(shift_despike,'datVZ_despike_sclNegToPef'+stag,
##         'window n1=%d | pad beg1=%d | put o1=0.075' % (nt-nshifts,nshifts))
##    shifts_despike.append(shift_despike)
##    Flow(shift_bandpass,'datVZ_bandpass'+stag,
##         'window n1=%d | pad beg1=%d | put o1=0.075' % (nt-nshifts,nshifts))
##    shifts_bandpass.append(shift_bandpass)
##
##Flow('shifts',shifts,'cat ${SOURCES[1:%d]}' % len(shifts))
##Flow('shifts_despike',shifts_despike,'cat ${SOURCES[1:%d]}' % len(shifts_despike))
##Flow('shifts_bandpass',shifts_bandpass,'cat ${SOURCES[1:%d]}' % len(shifts_bandpass))

##Flow('filt datDw_pred'+stag,'shifts datPP_wdw'+stag+' pef',
##     '''
##     lpf match=${SOURCES[1]} rect1=5 rect2=5 niter=400
##     pred=${TARGETS[1]} pef=${SOURCES[2]}
##     ''')
##Flow('filt_despike datDw_despike_pred'+stag,'shifts_despike datPP_wdw'+stag+' pef',
##    '''
##    lpf match=${SOURCES[1]} rect1=5 rect2=5 niter=400
##     pred=${TARGETS[1]} pef=${SOURCES[2]}
##     ''')
##Flow('filt_bandpass datDw_bandpass_pred'+stag,'shifts_bandpass datPP_wdw'+stag+' pef',
##     '''
##     lpf match=${SOURCES[1]} rect1=5 rect2=5 niter=400
##     pred=${TARGETS[1]} pef=${SOURCES[2]}
##     ''')

#Flow('datVZ_specbal'+stag,'datPP_wdw'+stag+' datVZ_sclNegToPef'+stag,'< ${SOURCES[1]} $RSFROOT/bin/sfreshape dim=2 ma=${SOURCES[0]} ma2=${SOURCES[1]}',stdin=0)

##Flow('datVZ_despike_sclNegToPef'+stag,'datVZ_sclNegToPef'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')

##Flow('datVZ_ampbal'+stag,'datPP_wdw'+stag+' datVZ_bandpass'+stag,'< ${SOURCES[1]} $RSFROOT/bin/sfabalance other=${SOURCES[0]} ',stdin=0)

##Flow('datDw_nopred_wdw'+stag,'datPP_wdw'+stag+' datVZ_sclNegToPef'+stag,'add scale=0.5,0.5 ${SOURCES[1]}')
##Flow('datUp_nopred_wdw'+stag,'datPP_wdw'+stag+' datVZ_sclNegToPef'+stag,'add scale=0.5,-0.5 ${SOURCES[1]}')
##
##Flow('datDw_nopred'+stag,'datPP'+stag+' datVZ_sclNeg'+stag,'add scale=1,-1 ${SOURCES[1]}')
###Flow('datDw_nopred_specbal_wdw'+stag,'datPP_wdw'+stag+' datVZ_specbal'+stag,'add scale=1,-1 ${SOURCES[1]}')
##Flow('datDw_nopred_bandpass_wdw'+stag,'datPP_wdw'+stag+' datVZ_bandpass'+stag,'add scale=0.5,0.5 ${SOURCES[1]}')
##Flow('datUp_nopred_bandpass_wdw'+stag,'datPP_wdw'+stag+' datVZ_bandpass'+stag,'add scale=0.5,-0.5 ${SOURCES[1]}')
##
###Flow('datDw_nopred_ampbal_wdw'+stag,'datPP_wdw'+stag+' datVZ_ampbal'+stag,'add scale=1,-1 ${SOURCES[1]}')
##Flow('datDw_despike_nopred_bandpass_wdw'+stag,'datDw_nopred_bandpass_wdw'+stag,
##      '''
##      costaper nw1=5 nw2=5 | $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##
##Flow('datUp_despike_nopred_bandpass_wdw'+stag,'datUp_nopred_bandpass_wdw'+stag,
##      '''
##      costaper nw1=5 nw2=5 | $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##
##Flow('datDw_despike_wdw'+stag,'datDw_nopred_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##Flow('datUp_despike_wdw'+stag,'datUp_nopred_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##
##Flow('datDw_despike'+stag,'datDw_nopred'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##
##Flow('datDw_lpf_wdw'+stag,'datPP_wdw'+stag+' datDw_pred'+stag,'add scale=1,-1 ${SOURCES[1]}')
##Flow('datDw_despike_lpf_wdw'+stag,'datPP_wdw'+stag+' datDw_despike_pred'+stag,'add scale=1,-1 ${SOURCES[1]}')
##Flow('datDw_bandpass_lpf_wdw'+stag,'datPP_wdw'+stag+' datDw_bandpass_pred'+stag,'add scale=1,-1 ${SOURCES[1]}')


#### Tau-p Test
##Flow('datVZ_bpass_wdw'+stag,'datVZ_p90_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfbandpass fhi=60 flo=0.5 
##      ''')
##Flow('datPP_bpass_wdw'+stag,'datPP_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfbandpass fhi=60 flo=0.5 
##      ''')
##Flow('datPP_bpass_p90_wdw'+stag,'datPP_p90_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfbandpass fhi=60 flo=0.5 
##      ''')
##
##eps_ratPPVZ = 0.00
##Flow('specVZ_wdw'+stag,'datVZ_bpass_wdw'+stag,'spectra')
##Flow('spfkPP_wdw'+stag,'datPP_bpass_wdw'+stag,'spectra2')
##
##Flow('specPP_wdw'+stag,'datPP_bpass_wdw'+stag,' pad end1=700 | fft1 | real')
###Flow('specPP_wdw'+stag,'datPP_wdw'+stag,'spectra')
##Flow('datPP_pad_wdw'+stag,'datPP_bpass_wdw'+stag,'pad end1=700 | fft1 | pad end1=2800 | fft1 inv=y | window n1=800 ')
##Flow('datPP_padx_wdw'+stag,'datPP_bpass_wdw'+stag,'transp | pad end1=700 | fft1 | pad end1=2800 | fft1 inv=y | window n1=800 | transp ')
##Flow('datVZ_pad_wdw'+stag,'datVZ_bpass_wdw'+stag,'pad end1=700 | fft1 | pad end1=2800 | fft1 inv=y | window n1=800 ')
##Flow('spfkPP_padx_wdw'+stag,'datPP_padx_wdw'+stag,'spectra2')
##
###Flow()
##np = 300
##pmin = -0.00075
##pmax = 0.00075
##dp = (pmax-pmin)/(np-1)
##
##
##Flow('taupPP_wdw'+stag,'datPP_wdw'+stag,
##     '''
##     costaper nw2=15 nw1=15 | put o2=-1312.5 d2=22.5 | pad beg2=50 end2=50 beg1=100 end1=100 | 
##     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=y niter=100
##     '''%(np,pmin,dp))
##Flow('invtaupPP_wdw'+stag,'taupPP_wdw'+stag,
##     '''
##     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=n niter=100 ox=-2437.5 dx=22.5 nx=200
##     '''%(np,pmin,dp))
##
##Flow('taupPP_bpass_wdw'+stag,'datPP_bpass_wdw'+stag,
##     '''
##     costaper nw2=15 nw1=15 | put o2=-1312.5 d2=22.5 | pad beg2=50 end2=50 beg1=100 end1=100 | 
##     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=y niter=100
##     '''%(np,pmin,dp))
##np = 600
##pmin = -0.00075
##pmax = 0.00075
##dp = (pmax-pmin)/(np-1)
##
##Flow('taupPP_bpass_tst01_wdw'+stag,'datPP_bpass_wdw'+stag,
##     '''
##     costaper nw2=15 nw1=15 | put o2=-1312.5 d2=22.5 | pad beg2=50 end2=50 beg1=100 end1=100 | 
##     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=y niter=100
##     '''%(np,pmin,dp))
##np = 300
##pmin = -0.00075
##pmax = 0.00075
##dp = (pmax-pmin)/(np-1)
##
##Flow('taupPP_bpass_tst02_wdw'+stag,'datPP_padx_wdw'+stag,
##     '''
##     costaper nw2=15 nw1=15 | put o2=-1312.5 | pad beg2=50 end2=50 beg1=100 end1=100 | 
##     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=y niter=100
##     '''%(np,pmin,dp))
##
##
####Flow('taupPP_pad_wdw'+stag,'datPP_pad_wdw'+stag,
####     '''
####     costaper nw2=15 nw1=15 | put o2=-1312.5 d2=22.5 | pad beg2=50 end2=50 beg1=100 end1=100 | 
####     $RSFROOT/bin/sfradon np=%d p0=%g dp=%g adj=y niter=100
####     '''%(np,pmin,dp))
####
####Flow('slntPP_wdw'+stag,'datPP_wdw'+stag,
####     '''
####     window n2=45 f2=55 | put o2=0.0 d2=0.0225  | $RSFROOT/bin/sfslant np=500 p0=-10.0 dp=0.05 adj=y 
####     ''')
#####     '''%(np,pmin,dp))
####
####Flow('taupPP_tst01_wdw'+stag,'datPP_wdw'+stag,
####     '''
####      costaper nw2=15 nw1=15 | put o2=-1312.5 d2=22.5 | pad beg2=50 end2=50 beg1=100 end1=100 
####     ''')
####
####   
##
##
##Flow('specVZ_bpass_wdw'+stag,'datVZ_bpass_wdw'+stag,'spectra')
##Flow('specPP_bpass_wdw'+stag,'datPP_bpass_wdw'+stag,'spectra')
##
##Flow('specSc_wdw'+stag,'specPP_wdw'+stag+' specVZ_wdw'+stag,
##     '''
##     math vz=${SOURCES[1]} output='1/(vz)' |
##     math pp=${SOURCES[0]} output='abs((input*pp))/10000000' | 
##     nan2value 
##     ''',stdin=0)
##Flow('specSc_tst01_wdw'+stag,'specPP_wdw'+stag+' specVZ_wdw'+stag,
##     '''
##     math vz=${SOURCES[1]} output='1/(vz*1000000+%d)' |
##     clip clip=99999.999 |
##     math pp=${SOURCES[0]} output='abs((input*pp))' | 
##     nan2value 
##     '''%eps_ratPPVZ,stdin=0)
##Flow('specSc_tst02_wdw'+stag,'specPP_bpass_wdw'+stag+' specVZ_bpass_wdw'+stag,
##     '''
##     math vz=${SOURCES[1]} output='1/(vz*1000000)' |
##     math pp=${SOURCES[0]} output='abs((input*pp))' | 
##     nan2value 
##     ''',stdin=0)
##Flow('specSc_tst02_despike_wdw'+stag,'specSc_tst02_wdw'+stag,
##      '''
##      $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##      ''')
##
##
####Flow('datVZ_sclPos'+stag+iter_tag,' datVZ_wdw'+stag+' datSc_wdw'+stag+iter_tag,
####     '''
####     math vz=${SOURCES[0]} weight=${SOURCES[1]} output='10000000*vz*weight'
####     ''',stdin=0)
##
##### try for antispike and match filter
##niter=10
##datPP_p_tmp = 'datUp_despike_wdw'+stag
##datPP_m = 'datDw_despike_wdw'+stag
##nshifts = 13
##datPP_m_iter = 'datPP_m_iter_wdw'+stag
##

##
##
##for iter in range(niter):
##  iter_tag = '%03d'%iter
##  Flow(datPP_m_iter+iter_tag,'datPP_wdw'+stag+' '+datPP_p_tmp,
##       '''
##       costaper nw1=5 nw2=5 | add scale=1,-1 ${SOURCES[1]} 
##       ''')
###     $RSFROOT/bin/sfdespike2 wide1=3 wide2=3 | bandpass fhi=50 flo=1
##
##  shifts = [datPP_p_tmp]
##  for s in range(1,nshifts):
##    shift = 'shift+%02d' % s
##    Flow(shift+iter_tag,datPP_p_tmp,
##         'window n1=%d | pad beg1=%d | put o1=0.05' % (nt-nshifts,nshifts))
##    shifts.append(shift+iter_tag)
##
##  Flow('shifts'+iter_tag,shifts,'cat ${SOURCES[1:%d]}' % len(shifts))
##
##  Flow('filt'+iter_tag+' datUp_pred'+stag+iter_tag,'shifts'+iter_tag+' '+'datPP_wdw'+stag+' pef',
##       '''
##       lpf match=${SOURCES[1]} rect1=5 rect2=5 niter=400
##       pred=${TARGETS[1]} pef=${SOURCES[2]}
##       ''')
##  datPP_p = 'datUp_pred'+stag+iter_tag 
###  Flow(datPP_m,'datDw_lpf_pred'+stag+iter_tag,
###       '''
###       costaper nw1=5 nw2=5 |  $RSFROOT/bin/sfdespike2 wide1=3 wide2=3 | bandpass fhi=50 flo=1
###       ''') 
##  datPP_p_res = 'datUp_pred_res'+stag+iter_tag
##  Flow(datPP_p_res,'datPP_wdw'+stag+' '+datPP_m_iter+iter_tag+' '+datPP_p,
##       '''
##       add scale=1,-1 ${SOURCES[1]} | add scale=1,-1 ${SOURCES[2]}
##       ''')
##  Flow('datSc_wdw'+stag+iter_tag,datPP_p_res+' datVZ_wdw'+stag,
##       '''
##       math vz=${SOURCES[1]} output='1/(vz)' |
##       clip clip=99999.999 |
##       math pp=${SOURCES[0]} output='abs((input*pp))/10000000' | 
##       nan2value 
##       ''',stdin=0)
##  Flow('datVZ_sclPos'+stag+iter_tag,' datVZ_wdw'+stag+' datSc_wdw'+stag+iter_tag,
##       '''
##       math vz=${SOURCES[0]} weight=${SOURCES[1]} output='10000000*vz*weight'
##       ''',stdin=0)
##  datPP_p_tmp = 'datUp_pred_tmp'+stag+iter_tag
##
##  Flow(datPP_p_tmp,datPP_p_res+' datVZ_sclPos'+stag+iter_tag,
##       '''
##       add scale=0.5,-0.5 ${SOURCES[1]} | $RSFROOT/bin/sfdespike2 wide1=3 wide2=3
##       ''')
##

## ------------------------------------------------------------


#################################################3

finame = ''
fband = [] 
def fband_dcomp(finame=finame, fband=fband):
  foname_fbi = []
  foname =finame+'fbandpass'
  for fbi in range(len(fband[1:])):
    fbi_tag = '%02d'%fbi
    foname_tmp = finame+'fbandpass'+fbi_tag
    Flow(foname_tmp,finame,
       '''
       $RSFROOT/bin/sfbandpass fhi=%g flo=%g 
       '''%(fband[fbi+1],fband[fbi]))
    foname_fbi.append(foname_tmp)

  Flow(foname,foname_fbi,
       '''
       cat ${SOURCES[1:%d]} | put label3='Freq band'
       '''%(len(foname_fbi)) )
  return foname
##########################################################
##nt = 100
##wdw_xn = 100
##wdw_x0 = 75
##wdw_tn = nt
##wdw_t0 = 10

nt = 400
wdw_xn = 300
wdw_x0 = 0
wdw_tn = nt
wdw_t0 = 0

##nt = 150
##wdw_xn = 10
##wdw_x0 = 130
##wdw_tn = nt
##wdw_t0 = 60
##nt = 35
##wdw_xn = 10
##wdw_x0 = 130
##wdw_tn = nt
##wdw_t0 = 65


Flow('datVZ_wdw'+stag,'datVZ'+stag+' datVZ_wb'+stag,
     '''
     add scale=1.0,-1.0 ${SOURCES[1]} | window n2=%d f2=%d n1=%d f1=%d | costaper nw2=10 nw1=10 
     '''%(wdw_xn, wdw_x0, wdw_tn, wdw_t0))
Flow('datPP_wdw'+stag,'datPP'+stag+' datPP_wb'+stag,
     '''
      add scale=1.0,-1.0 ${SOURCES[1]} | window n2=%d f2=%d n1=%d f1=%d | costaper nw1=10 nw2=10
     '''%(wdw_xn, wdw_x0, wdw_tn, wdw_t0))
Flow('datVZ_bpass_wdw'+stag,'datVZ_wdw'+stag,
      '''
      $RSFROOT/bin/sfbandpass fhi=60 flo=0.5 
      ''')
Flow('datPP_bpass_wdw'+stag,'datPP_wdw'+stag,
      '''
      $RSFROOT/bin/sfbandpass fhi=60 flo=0.5 
      ''')

eps_ratPPVZ = .0001

#fband = [20,30]
fband = [0,35,70,99]

datPP_bpass = 'datPP_bpass_wdw'+stag
datPP_fbi = fband_dcomp(finame=datPP_bpass, fband=fband)

datPP_envelope = datPP_fbi+'_envelope' 
Flow(datPP_envelope,datPP_fbi,'$RSFROOT/bin/sfenvelope')

PPVZ_mag_ord = 1000000.0
nax3 = len(fband)-1

for nax3i in range (nax3):
  nax3i_tag = '%02d'%nax3i
  datPP_envelope_tmp = datPP_envelope+'_tmp'+nax3i_tag
  
  Flow(datPP_envelope_tmp,datPP_envelope,
       '''
       window n3=1 f3=%d
       '''%(nax3i))

datPPUp_stk_psi = []
datPPDw_stk_psi = []

for phsh_i in range(16):
  phsh_itag = '%03d'%(22.5*phsh_i)
  phsh = phsh_i*math.pi/8.0
  phsh_re = math.cos(phsh-math.pi*0.5)
  phsh_im = math.sin(phsh-math.pi*0.5)
  foname_phsh =  'datVZ_bpass_p%s_wdw'%(phsh_itag)+stag
  finame_phsh =  'datVZ_bpass_wdw'+stag
  Flow(foname_phsh,finame_phsh,
       '''
       fft1 |
       math output='(%g+I*%g)*(real(input)+imag(input))' | 
       fft1 inv=y 
       '''%(phsh_re,phsh_im))
  ## Frequency band decomposition
  
  datVZ_bpass = foname_phsh
  datVZ_fbi = fband_dcomp(finame=datVZ_bpass, fband=fband)
  
  ## Envelope computation
  
  datVZ_envelope = datVZ_fbi+'_envelope' 
  Flow(datVZ_envelope,datVZ_fbi,'$RSFROOT/bin/sfenvelope')
  
  ## PP/VZ Envelope Ratio
  
  
  datPPVZ_ratio = datVZ_fbi+'_PPVZ_ratio'
  datPPVZ_ratio_nax3i = []
  datVZSc_fbi_nax3i = []
  datVZSc_fbi = datVZ_fbi+'_Sc'
  for nax3i in range (nax3):
    nax3i_tag = '%02d'%nax3i
    datVZ_fbi_tmp = datVZ_fbi+'_tmp'+nax3i_tag
    datPP_envelope_tmp = datPP_envelope+'_tmp'+nax3i_tag

    Flow(datPPVZ_ratio+nax3i_tag,datVZ_envelope+' '+datPP_envelope_tmp,
         '''
         window n3=1 f3=%d | math output='1/(input*%g+%g)' |
         math pp=${SOURCES[1]} output='(input*pp)' 
         '''%(nax3i,PPVZ_mag_ord,eps_ratPPVZ))
    datPPVZ_ratio_nax3i.append(datPPVZ_ratio+nax3i_tag)
#          clip clip=%g value=0.0 | 
 
    Flow(datVZ_fbi_tmp,datVZ_fbi,
         '''
         window n3=1 f3=%d
         '''%(nax3i))
    Flow(datVZSc_fbi+nax3i_tag,datPPVZ_ratio+nax3i_tag+' '+datVZ_fbi_tmp,
         '''
         math vz=${SOURCES[1]} output='1*%g*input*vz'
         '''%(PPVZ_mag_ord))
    datVZSc_fbi_nax3i.append(datVZSc_fbi+nax3i_tag)
  
  ##ENDLOOP{for nax3i in range (nax3):}
  Flow(datPPVZ_ratio,datPPVZ_ratio_nax3i,
       '''
       cat ${SOURCES[1:%d]}
       '''%(len(datPPVZ_ratio_nax3i)) )
  Flow(datVZSc_fbi,datVZSc_fbi_nax3i,
       '''
       cat ${SOURCES[1:%d]} | put o3=0
       '''%(len(datVZSc_fbi_nax3i)) )
  
  datPPUp_fbi = 'datPPUp_fbi_wdw'+stag+'_ps%s'%(phsh_itag)
  datPPDw_fbi = 'datPPDw_fbi_wdw'+stag+'_ps%s'%(phsh_itag)
  datPPUp_stk_1t = datPPUp_fbi+'_1t'
  datPPDw_stk_1t = datPPDw_fbi+'_1t'
  Flow(datPPUp_fbi,datPP_fbi+' '+datVZSc_fbi,'add scale=0.5,0.5 ${SOURCES[1]}')
  Flow(datPPDw_fbi,datPP_fbi+' '+datVZSc_fbi,'add scale=0.5,-0.5 ${SOURCES[1]}')
  Flow(datPPUp_stk_1t,datPPUp_fbi,'stack axis=3 norm=n | window n2=1 f2=0')
  Flow(datPPDw_stk_1t,datPPDw_fbi,'stack axis=3 norm=n | window n2=1 f2=0')
  datPPUp_stk_psi.append(datPPUp_stk_1t)
  datPPDw_stk_psi.append(datPPDw_stk_1t)

##ENDLOOP{for phsh_i in range(16):}

Flow('datPPUp_stk_psi',datPPUp_stk_psi,'cat ${SOURCES[1:%d]} | transp plane=32 | put o2=-90 d2=22.5'%len(datPPUp_stk_psi))
Flow('datPPDw_stk_psi',datPPDw_stk_psi,'cat ${SOURCES[1:%d]} | transp plane=32 | put o2=-90 d2=22.5'%len(datPPDw_stk_psi))

Flow('datPP_PP_fbi',datPP_fbi+' '+datPP_bpass,'stack axis=3 norm=n | add scale=1,-1 ${SOURCES[1]}')
#Flow('datPP_PP_fbi',datPP_fbi+' '+datPP_bpass,'add scale=1,-1 ${SOURCES[1]}')
Flow('datVZ_VZ_fbi',datVZ_fbi+' '+datVZ_bpass,'stack axis=3 norm=n | add scale=1,-1 ${SOURCES[1]}')

## Match filter
##nt=400
##Flow('lag.asc',None,
##     '''
##     echo %d n1=1 n=%d,100 data_format=ascii_int in=$TARGET
##     ''' % (nt,nt))
##Flow('lag','lag.asc','dd form=native')
##
##Flow('pef.asc','lag',
##     '''
##     echo -1 a0=1 n1=1 data_format=ascii_float in=$TARGET
##     lag=$SOURCE
##     ''',stdin=0)
##Flow('pef','pef.asc','dd form=native')
##
##shifts = []
##datVZSc_stack = 'datVZSc_stack_wdw'+stag
##Flow(datVZSc_stack,datVZSc_fbi,'stack axis=3 norm=n')
##nshifts = 8
##for s in range(0,nshifts):
##  shift = 'shift+%02d' % s
##  Flow(shift,datVZSc_stack,
##       'window n1=%d | pad beg1=%d | put o1=%g' % (nt-nshifts,nshifts,0.005*wdw_t0))
##  shifts.append(shift)
##shifts.append(datVZSc_stack)
##for s in range(nshifts+1,nshifts*2+1):
##  shift = 'shift+%02d' % s
##  Flow(shift,datVZSc_stack,
##       'window n1=%d | pad end1=%d | put o1=%g' % (nt-nshifts,nshifts,0.005*wdw_t0))
##  shifts.append(shift)
##
##Flow('shifts',shifts,'cat ${SOURCES[1:%d]}' % len(shifts))
##datVZSc_lpf = 'datVZSc_lpf_wdw'+stag
##Flow('filt '+datVZSc_lpf,'shifts '+datPP_bpass+' pef',
##     '''
##     lpf match=${SOURCES[1]} rect1=200 rect2=3 niter=400
##     pred=${TARGETS[1]} pef=${SOURCES[2]}
##     ''')
##datPPUp_lpf = 'datPPUp_lpf_wdw'+stag
##datPPDw_lpf = 'datPPDw_lpf_wdw'+stag
##
##Flow(datPPUp_lpf,datPP_bpass+' '+datVZSc_lpf,'add scale=0.5,0.5 ${SOURCES[1]}')
##Flow(datPPDw_lpf,datPP_bpass+' '+datVZSc_lpf,'add scale=0.5,-0.5 ${SOURCES[1]}')
##

#####


###### SEGY write Phase test
##
##
##segy_finame = 'datPP_bpass_wdw'+stag
##segy_foname = 'segy_'+segy_finame
##segy_foname_trcl = 'trcl_'+segy_foname
##segy_foname_tfile = 'tfile_'+segy_foname
##
##Flow(segy_foname_trcl,segy_finame,
##      '''
##      < ${SOURCE} $RSFROOT/bin/sfheadermath output=N+1 | sfdd type=int \r 
##      ''',stdin=0)
##
##Flow(segy_foname_tfile,segy_finame+' '+segy_foname_trcl,
##      '''
##      < ${SOURCES[0]} $RSFROOT/bin/sfsegyheader tracl=${SOURCES[1]} \r
##      ''',stdin=0)
##Flow(segy_foname+'.segy',segy_finame+' '+segy_foname_tfile,
##      '''
##      < ${SOURCES[0]} $RSFROOT/bin/sfsegywrite tfile=${SOURCES[1]}
##      ''',stdin=0)
##ph = 45
##segy_finame = 'test_%ddeg.segy'%ph
##segy_foname = 'datPP_bpass_fp%d_wdw'%(ph)+stag
##Flow(segy_foname,segy_finame,
##      '''
##      < ${SOURCES[0]} $RSFROOT/bin/sfsegyread tfile=tfile.rsf hfile=hfile bfile=bfile endian=1
##      ''',stdin=0)
##ph = 90
##segy_finame = 'test_%ddeg.segy'%ph
##segy_foname = 'datPP_bpass_fp%d_wdw'%(ph)+stag
##Flow(segy_foname,segy_finame,
##      '''
##      < ${SOURCES[0]} $RSFROOT/bin/sfsegyread tfile=tfile.rsf hfile=hfile bfile=bfile endian=1
##      ''',stdin=0)
##
#################3

End()
